Grammar

    0 $accept: script $end

    1 script: script table
    2       | script operation
    3       | script bytecode
    4       | /* empty */

    5 @1: /* empty */

    6 table: "table" "identifier" @1 '{' table_items '}'

    7 table_items: table_items.label
    8            | table_items.descr

    9 table_items.label: table_items.label ',' label
   10                  | table_items.descr label
   11                  | label

   12 table_items.descr: table_items.label ',' description
   13                  | table_items.descr description
   14                  | description

   15 subscripts: "number" '='
   16           | "number" ".." "number" '='

   17 label: subscripts "identifier"

   18 description: subscripts bytecode

   19 @2: /* empty */

   20 bytecode: "bytecode" opt_id @2 '{' operation_list '}'

   21 @3: /* empty */

   22 operation_list: operation_list "identifier" @3 '(' opt_c_args ')' ';'
   23               | /* empty */

   24 opt_c_args: c_args
   25           | /* empty */

   26 c_args: c_args ',' c_arg
   27       | c_arg

   28 @4: /* empty */

   29 c_arg: @4 c_arg_body

   30 c_arg_body: c_arg_body "C expression"
   31           | "C expression"

   32 @5: /* empty */

   33 c_arg_body: c_arg_body '(' @5 c_arg_body ')'

   34 opt_id: "identifier"
   35       | /* empty */

   36 @6: /* empty */

   37 @7: /* empty */

   38 operation: "operation" "identifier" @6 ids stack_balance @7 '{' c_code '}'

   39 ids: ids "identifier"
   40    | /* empty */

   41 stack_balance: '(' ids "--" ids ')'

   42 c_code: c_code "C expression"
   43       | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22 33 41
')' (41) 22 33 41
',' (44) 9 12 26
';' (59) 22
'=' (61) 15 16
'{' (123) 6 20 38
'}' (125) 6 20 38
error (256)
"identifier" (258) 6 17 22 34 38 39
"C expression" (259) 30 31 42
"number" (260) 15 16
"operation" (261) 38
"table" (262) 6
"bytecode" (263) 20
".." (264) 16
"--" (265) 41


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
script (19)
    on left: 1 2 3 4, on right: 0 1 2 3
table (20)
    on left: 6, on right: 1
@1 (21)
    on left: 5, on right: 6
table_items (22)
    on left: 7 8, on right: 6
table_items.label (23)
    on left: 9 10 11, on right: 7 9 12
table_items.descr (24)
    on left: 12 13 14, on right: 8 10 13
subscripts (25)
    on left: 15 16, on right: 17 18
label (26)
    on left: 17, on right: 9 10 11
description (27)
    on left: 18, on right: 12 13 14
bytecode (28)
    on left: 20, on right: 3 18
@2 (29)
    on left: 19, on right: 20
operation_list (30)
    on left: 22 23, on right: 20 22
@3 (31)
    on left: 21, on right: 22
opt_c_args (32)
    on left: 24 25, on right: 22
c_args (33)
    on left: 26 27, on right: 24 26
c_arg (34)
    on left: 29, on right: 26 27
@4 (35)
    on left: 28, on right: 29
c_arg_body (36)
    on left: 30 31 33, on right: 29 30 33
@5 (37)
    on left: 32, on right: 33
opt_id (38)
    on left: 34 35, on right: 20
operation (39)
    on left: 38, on right: 2
@6 (40)
    on left: 36, on right: 38
@7 (41)
    on left: 37, on right: 38
ids (42)
    on left: 39 40, on right: 38 39 41
stack_balance (43)
    on left: 41, on right: 38
c_code (44)
    on left: 42 43, on right: 38 42


state 0

    0 $accept: . script $end

    $default  reduce using rule 4 (script)

    script  go to state 1


state 1

    0 $accept: script . $end
    1 script: script . table
    2       | script . operation
    3       | script . bytecode

    $end         shift, and go to state 2
    "operation"  shift, and go to state 3
    "table"      shift, and go to state 4
    "bytecode"   shift, and go to state 5

    table      go to state 6
    bytecode   go to state 7
    operation  go to state 8


state 2

    0 $accept: script $end .

    $default  accept


state 3

   38 operation: "operation" . "identifier" @6 ids stack_balance @7 '{' c_code '}'

    "identifier"  shift, and go to state 9


state 4

    6 table: "table" . "identifier" @1 '{' table_items '}'

    "identifier"  shift, and go to state 10


state 5

   20 bytecode: "bytecode" . opt_id @2 '{' operation_list '}'

    "identifier"  shift, and go to state 11

    $default  reduce using rule 35 (opt_id)

    opt_id  go to state 12


state 6

    1 script: script table .

    $default  reduce using rule 1 (script)


state 7

    3 script: script bytecode .

    $default  reduce using rule 3 (script)


state 8

    2 script: script operation .

    $default  reduce using rule 2 (script)


state 9

   38 operation: "operation" "identifier" . @6 ids stack_balance @7 '{' c_code '}'

    $default  reduce using rule 36 (@6)

    @6  go to state 13


state 10

    6 table: "table" "identifier" . @1 '{' table_items '}'

    $default  reduce using rule 5 (@1)

    @1  go to state 14


state 11

   34 opt_id: "identifier" .

    $default  reduce using rule 34 (opt_id)


state 12

   20 bytecode: "bytecode" opt_id . @2 '{' operation_list '}'

    $default  reduce using rule 19 (@2)

    @2  go to state 15


state 13

   38 operation: "operation" "identifier" @6 . ids stack_balance @7 '{' c_code '}'

    $default  reduce using rule 40 (ids)

    ids  go to state 16


state 14

    6 table: "table" "identifier" @1 . '{' table_items '}'

    '{'  shift, and go to state 17


state 15

   20 bytecode: "bytecode" opt_id @2 . '{' operation_list '}'

    '{'  shift, and go to state 18


state 16

   38 operation: "operation" "identifier" @6 ids . stack_balance @7 '{' c_code '}'
   39 ids: ids . "identifier"

    "identifier"  shift, and go to state 19
    '('           shift, and go to state 20

    stack_balance  go to state 21


state 17

    6 table: "table" "identifier" @1 '{' . table_items '}'

    "number"  shift, and go to state 22

    table_items        go to state 23
    table_items.label  go to state 24
    table_items.descr  go to state 25
    subscripts         go to state 26
    label              go to state 27
    description        go to state 28


state 18

   20 bytecode: "bytecode" opt_id @2 '{' . operation_list '}'

    $default  reduce using rule 23 (operation_list)

    operation_list  go to state 29


state 19

   39 ids: ids "identifier" .

    $default  reduce using rule 39 (ids)


state 20

   41 stack_balance: '(' . ids "--" ids ')'

    $default  reduce using rule 40 (ids)

    ids  go to state 30


state 21

   38 operation: "operation" "identifier" @6 ids stack_balance . @7 '{' c_code '}'

    $default  reduce using rule 37 (@7)

    @7  go to state 31


state 22

   15 subscripts: "number" . '='
   16           | "number" . ".." "number" '='

    ".."  shift, and go to state 32
    '='   shift, and go to state 33


state 23

    6 table: "table" "identifier" @1 '{' table_items . '}'

    '}'  shift, and go to state 34


state 24

    7 table_items: table_items.label .
    9 table_items.label: table_items.label . ',' label
   12 table_items.descr: table_items.label . ',' description

    ','  shift, and go to state 35

    $default  reduce using rule 7 (table_items)


state 25

    8 table_items: table_items.descr .
   10 table_items.label: table_items.descr . label
   13 table_items.descr: table_items.descr . description

    "number"  shift, and go to state 22

    $default  reduce using rule 8 (table_items)

    subscripts   go to state 26
    label        go to state 36
    description  go to state 37


state 26

   17 label: subscripts . "identifier"
   18 description: subscripts . bytecode

    "identifier"  shift, and go to state 38
    "bytecode"    shift, and go to state 5

    bytecode  go to state 39


state 27

   11 table_items.label: label .

    $default  reduce using rule 11 (table_items.label)


state 28

   14 table_items.descr: description .

    $default  reduce using rule 14 (table_items.descr)


state 29

   20 bytecode: "bytecode" opt_id @2 '{' operation_list . '}'
   22 operation_list: operation_list . "identifier" @3 '(' opt_c_args ')' ';'

    "identifier"  shift, and go to state 40
    '}'           shift, and go to state 41


state 30

   39 ids: ids . "identifier"
   41 stack_balance: '(' ids . "--" ids ')'

    "identifier"  shift, and go to state 19
    "--"          shift, and go to state 42


state 31

   38 operation: "operation" "identifier" @6 ids stack_balance @7 . '{' c_code '}'

    '{'  shift, and go to state 43


state 32

   16 subscripts: "number" ".." . "number" '='

    "number"  shift, and go to state 44


state 33

   15 subscripts: "number" '=' .

    $default  reduce using rule 15 (subscripts)


state 34

    6 table: "table" "identifier" @1 '{' table_items '}' .

    $default  reduce using rule 6 (table)


state 35

    9 table_items.label: table_items.label ',' . label
   12 table_items.descr: table_items.label ',' . description

    "number"  shift, and go to state 22

    subscripts   go to state 26
    label        go to state 45
    description  go to state 46


state 36

   10 table_items.label: table_items.descr label .

    $default  reduce using rule 10 (table_items.label)


state 37

   13 table_items.descr: table_items.descr description .

    $default  reduce using rule 13 (table_items.descr)


state 38

   17 label: subscripts "identifier" .

    $default  reduce using rule 17 (label)


state 39

   18 description: subscripts bytecode .

    $default  reduce using rule 18 (description)


state 40

   22 operation_list: operation_list "identifier" . @3 '(' opt_c_args ')' ';'

    $default  reduce using rule 21 (@3)

    @3  go to state 47


state 41

   20 bytecode: "bytecode" opt_id @2 '{' operation_list '}' .

    $default  reduce using rule 20 (bytecode)


state 42

   41 stack_balance: '(' ids "--" . ids ')'

    $default  reduce using rule 40 (ids)

    ids  go to state 48


state 43

   38 operation: "operation" "identifier" @6 ids stack_balance @7 '{' . c_code '}'

    $default  reduce using rule 43 (c_code)

    c_code  go to state 49


state 44

   16 subscripts: "number" ".." "number" . '='

    '='  shift, and go to state 50


state 45

    9 table_items.label: table_items.label ',' label .

    $default  reduce using rule 9 (table_items.label)


state 46

   12 table_items.descr: table_items.label ',' description .

    $default  reduce using rule 12 (table_items.descr)


state 47

   22 operation_list: operation_list "identifier" @3 . '(' opt_c_args ')' ';'

    '('  shift, and go to state 51


state 48

   39 ids: ids . "identifier"
   41 stack_balance: '(' ids "--" ids . ')'

    "identifier"  shift, and go to state 19
    ')'           shift, and go to state 52


state 49

   38 operation: "operation" "identifier" @6 ids stack_balance @7 '{' c_code . '}'
   42 c_code: c_code . "C expression"

    "C expression"  shift, and go to state 53
    '}'             shift, and go to state 54


state 50

   16 subscripts: "number" ".." "number" '=' .

    $default  reduce using rule 16 (subscripts)


state 51

   22 operation_list: operation_list "identifier" @3 '(' . opt_c_args ')' ';'

    "C expression"  reduce using rule 28 (@4)
    $default        reduce using rule 25 (opt_c_args)

    opt_c_args  go to state 55
    c_args      go to state 56
    c_arg       go to state 57
    @4          go to state 58


state 52

   41 stack_balance: '(' ids "--" ids ')' .

    $default  reduce using rule 41 (stack_balance)


state 53

   42 c_code: c_code "C expression" .

    $default  reduce using rule 42 (c_code)


state 54

   38 operation: "operation" "identifier" @6 ids stack_balance @7 '{' c_code '}' .

    $default  reduce using rule 38 (operation)


state 55

   22 operation_list: operation_list "identifier" @3 '(' opt_c_args . ')' ';'

    ')'  shift, and go to state 59


state 56

   24 opt_c_args: c_args .
   26 c_args: c_args . ',' c_arg

    ','  shift, and go to state 60

    $default  reduce using rule 24 (opt_c_args)


state 57

   27 c_args: c_arg .

    $default  reduce using rule 27 (c_args)


state 58

   29 c_arg: @4 . c_arg_body

    "C expression"  shift, and go to state 61

    c_arg_body  go to state 62


state 59

   22 operation_list: operation_list "identifier" @3 '(' opt_c_args ')' . ';'

    ';'  shift, and go to state 63


state 60

   26 c_args: c_args ',' . c_arg

    $default  reduce using rule 28 (@4)

    c_arg  go to state 64
    @4     go to state 58


state 61

   31 c_arg_body: "C expression" .

    $default  reduce using rule 31 (c_arg_body)


state 62

   29 c_arg: @4 c_arg_body .
   30 c_arg_body: c_arg_body . "C expression"
   33           | c_arg_body . '(' @5 c_arg_body ')'

    "C expression"  shift, and go to state 65
    '('             shift, and go to state 66

    $default  reduce using rule 29 (c_arg)


state 63

   22 operation_list: operation_list "identifier" @3 '(' opt_c_args ')' ';' .

    $default  reduce using rule 22 (operation_list)


state 64

   26 c_args: c_args ',' c_arg .

    $default  reduce using rule 26 (c_args)


state 65

   30 c_arg_body: c_arg_body "C expression" .

    $default  reduce using rule 30 (c_arg_body)


state 66

   33 c_arg_body: c_arg_body '(' . @5 c_arg_body ')'

    $default  reduce using rule 32 (@5)

    @5  go to state 67


state 67

   33 c_arg_body: c_arg_body '(' @5 . c_arg_body ')'

    "C expression"  shift, and go to state 61

    c_arg_body  go to state 68


state 68

   30 c_arg_body: c_arg_body . "C expression"
   33           | c_arg_body . '(' @5 c_arg_body ')'
   33           | c_arg_body '(' @5 c_arg_body . ')'

    "C expression"  shift, and go to state 65
    '('             shift, and go to state 66
    ')'             shift, and go to state 69


state 69

   33 c_arg_body: c_arg_body '(' @5 c_arg_body ')' .

    $default  reduce using rule 33 (c_arg_body)
