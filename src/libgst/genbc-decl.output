Terminals which are not used

   "MATCH_BYTECODES"


State 51 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce


Grammar

    0 $accept: decls $end

    1 decls: decls decl
    2      | decl

    3 decl: "identifier" opt_field_list ';'
    4     | "BEGIN" '{' c_code '}'
    5     | "END" '{' c_code '}'
    6     | "number" '{' code '}'
    7     | "number" ".." "number" '{' code '}'

    8 opt_field_list: '(' field_list ')'
    9               | /* empty */

   10 field_list: field_list ',' "identifier"
   11           | "identifier"

   12 @1: /* empty */

   13 c_code: @1 c_code_body

   14 c_code_expr_body: c_code_expr_body c_code_expr_item
   15                 | /* empty */

   16 c_code_expr_item: '='

   17 @2: /* empty */

   18 c_code_expr_item: '(' @2 c_code_body ')'
   19                 | "identifier"
   20                 | "number"
   21                 | "expression"

   22 c_code_body: c_code_body c_code_item
   23            | /* empty */

   24 c_code_item: c_code_expr_item
   25            | ','

   26 @3: /* empty */

   27 code: @3 code_body

   28 code_body: code_body code_item
   29          | /* empty */

   30 code_item: c_code_item
   31          | "break"
   32          | "continue"

   33 @4: /* empty */

   34 code_item: "dispatch" "identifier" @4 opt_dispatch_args
   35          | "extract" bitfields

   36 opt_dispatch_args: '(' dispatch_args ')'
   37                  | /* empty */

   38 dispatch_args: dispatch_args ',' dispatch_arg
   39              | dispatch_arg

   40 @5: /* empty */

   41 dispatch_arg: @5 c_code_expr_body

   42 opt_size: '(' "number" ')'
   43         | /* empty */

   44 bitfields: bitfields ',' bitfield
   45          | bitfield

   46 bitfield: "identifier" opt_size


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 18 36 42
')' (41) 8 18 36 42
',' (44) 10 25 38 44
';' (59) 3
'=' (61) 16
'{' (123) 4 5 6 7
'}' (125) 4 5 6 7
error (256)
"MATCH_BYTECODES" (258)
"BEGIN" (259) 4
"END" (260) 5
"break" (261) 31
"continue" (262) 32
"dispatch" (263) 34
"extract" (264) 35
".." (265) 7
"number" (266) 6 7 20 42
"identifier" (267) 3 10 11 19 34 46
"expression" (268) 21


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
decls (22)
    on left: 1 2, on right: 0 1
decl (23)
    on left: 3 4 5 6 7, on right: 1 2
opt_field_list (24)
    on left: 8 9, on right: 3
field_list (25)
    on left: 10 11, on right: 8 10
c_code (26)
    on left: 13, on right: 4 5
@1 (27)
    on left: 12, on right: 13
c_code_expr_body (28)
    on left: 14 15, on right: 14 41
c_code_expr_item (29)
    on left: 16 18 19 20 21, on right: 14 24
@2 (30)
    on left: 17, on right: 18
c_code_body (31)
    on left: 22 23, on right: 13 18 22
c_code_item (32)
    on left: 24 25, on right: 22 30
code (33)
    on left: 27, on right: 6 7
@3 (34)
    on left: 26, on right: 27
code_body (35)
    on left: 28 29, on right: 27 28
code_item (36)
    on left: 30 31 32 34 35, on right: 28
@4 (37)
    on left: 33, on right: 34
opt_dispatch_args (38)
    on left: 36 37, on right: 34
dispatch_args (39)
    on left: 38 39, on right: 36 38
dispatch_arg (40)
    on left: 41, on right: 38 39
@5 (41)
    on left: 40, on right: 41
opt_size (42)
    on left: 42 43, on right: 46
bitfields (43)
    on left: 44 45, on right: 35 44
bitfield (44)
    on left: 46, on right: 44 45


state 0

    0 $accept: . decls $end

    "BEGIN"       shift, and go to state 1
    "END"         shift, and go to state 2
    "number"      shift, and go to state 3
    "identifier"  shift, and go to state 4

    decls  go to state 5
    decl   go to state 6


state 1

    4 decl: "BEGIN" . '{' c_code '}'

    '{'  shift, and go to state 7


state 2

    5 decl: "END" . '{' c_code '}'

    '{'  shift, and go to state 8


state 3

    6 decl: "number" . '{' code '}'
    7     | "number" . ".." "number" '{' code '}'

    ".."  shift, and go to state 9
    '{'   shift, and go to state 10


state 4

    3 decl: "identifier" . opt_field_list ';'

    '('  shift, and go to state 11

    $default  reduce using rule 9 (opt_field_list)

    opt_field_list  go to state 12


state 5

    0 $accept: decls . $end
    1 decls: decls . decl

    $end          shift, and go to state 13
    "BEGIN"       shift, and go to state 1
    "END"         shift, and go to state 2
    "number"      shift, and go to state 3
    "identifier"  shift, and go to state 4

    decl  go to state 14


state 6

    2 decls: decl .

    $default  reduce using rule 2 (decls)


state 7

    4 decl: "BEGIN" '{' . c_code '}'

    $default  reduce using rule 12 (@1)

    c_code  go to state 15
    @1      go to state 16


state 8

    5 decl: "END" '{' . c_code '}'

    $default  reduce using rule 12 (@1)

    c_code  go to state 17
    @1      go to state 16


state 9

    7 decl: "number" ".." . "number" '{' code '}'

    "number"  shift, and go to state 18


state 10

    6 decl: "number" '{' . code '}'

    $default  reduce using rule 26 (@3)

    code  go to state 19
    @3    go to state 20


state 11

    8 opt_field_list: '(' . field_list ')'

    "identifier"  shift, and go to state 21

    field_list  go to state 22


state 12

    3 decl: "identifier" opt_field_list . ';'

    ';'  shift, and go to state 23


state 13

    0 $accept: decls $end .

    $default  accept


state 14

    1 decls: decls decl .

    $default  reduce using rule 1 (decls)


state 15

    4 decl: "BEGIN" '{' c_code . '}'

    '}'  shift, and go to state 24


state 16

   13 c_code: @1 . c_code_body

    $default  reduce using rule 23 (c_code_body)

    c_code_body  go to state 25


state 17

    5 decl: "END" '{' c_code . '}'

    '}'  shift, and go to state 26


state 18

    7 decl: "number" ".." "number" . '{' code '}'

    '{'  shift, and go to state 27


state 19

    6 decl: "number" '{' code . '}'

    '}'  shift, and go to state 28


state 20

   27 code: @3 . code_body

    $default  reduce using rule 29 (code_body)

    code_body  go to state 29


state 21

   11 field_list: "identifier" .

    $default  reduce using rule 11 (field_list)


state 22

    8 opt_field_list: '(' field_list . ')'
   10 field_list: field_list . ',' "identifier"

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


state 23

    3 decl: "identifier" opt_field_list ';' .

    $default  reduce using rule 3 (decl)


state 24

    4 decl: "BEGIN" '{' c_code '}' .

    $default  reduce using rule 4 (decl)


state 25

   13 c_code: @1 c_code_body .
   22 c_code_body: c_code_body . c_code_item

    "number"      shift, and go to state 32
    "identifier"  shift, and go to state 33
    "expression"  shift, and go to state 34
    '('           shift, and go to state 35
    ','           shift, and go to state 36
    '='           shift, and go to state 37

    $default  reduce using rule 13 (c_code)

    c_code_expr_item  go to state 38
    c_code_item       go to state 39


state 26

    5 decl: "END" '{' c_code '}' .

    $default  reduce using rule 5 (decl)


state 27

    7 decl: "number" ".." "number" '{' . code '}'

    $default  reduce using rule 26 (@3)

    code  go to state 40
    @3    go to state 20


state 28

    6 decl: "number" '{' code '}' .

    $default  reduce using rule 6 (decl)


state 29

   27 code: @3 code_body .
   28 code_body: code_body . code_item

    "break"       shift, and go to state 41
    "continue"    shift, and go to state 42
    "dispatch"    shift, and go to state 43
    "extract"     shift, and go to state 44
    "number"      shift, and go to state 32
    "identifier"  shift, and go to state 33
    "expression"  shift, and go to state 34
    '('           shift, and go to state 35
    ','           shift, and go to state 36
    '='           shift, and go to state 37

    $default  reduce using rule 27 (code)

    c_code_expr_item  go to state 38
    c_code_item       go to state 45
    code_item         go to state 46


state 30

    8 opt_field_list: '(' field_list ')' .

    $default  reduce using rule 8 (opt_field_list)


state 31

   10 field_list: field_list ',' . "identifier"

    "identifier"  shift, and go to state 47


state 32

   20 c_code_expr_item: "number" .

    $default  reduce using rule 20 (c_code_expr_item)


state 33

   19 c_code_expr_item: "identifier" .

    $default  reduce using rule 19 (c_code_expr_item)


state 34

   21 c_code_expr_item: "expression" .

    $default  reduce using rule 21 (c_code_expr_item)


state 35

   18 c_code_expr_item: '(' . @2 c_code_body ')'

    $default  reduce using rule 17 (@2)

    @2  go to state 48


state 36

   25 c_code_item: ',' .

    $default  reduce using rule 25 (c_code_item)


state 37

   16 c_code_expr_item: '=' .

    $default  reduce using rule 16 (c_code_expr_item)


state 38

   24 c_code_item: c_code_expr_item .

    $default  reduce using rule 24 (c_code_item)


state 39

   22 c_code_body: c_code_body c_code_item .

    $default  reduce using rule 22 (c_code_body)


state 40

    7 decl: "number" ".." "number" '{' code . '}'

    '}'  shift, and go to state 49


state 41

   31 code_item: "break" .

    $default  reduce using rule 31 (code_item)


state 42

   32 code_item: "continue" .

    $default  reduce using rule 32 (code_item)


state 43

   34 code_item: "dispatch" . "identifier" @4 opt_dispatch_args

    "identifier"  shift, and go to state 50


state 44

   35 code_item: "extract" . bitfields

    "identifier"  shift, and go to state 51

    bitfields  go to state 52
    bitfield   go to state 53


state 45

   30 code_item: c_code_item .

    $default  reduce using rule 30 (code_item)


state 46

   28 code_body: code_body code_item .

    $default  reduce using rule 28 (code_body)


state 47

   10 field_list: field_list ',' "identifier" .

    $default  reduce using rule 10 (field_list)


state 48

   18 c_code_expr_item: '(' @2 . c_code_body ')'

    $default  reduce using rule 23 (c_code_body)

    c_code_body  go to state 54


state 49

    7 decl: "number" ".." "number" '{' code '}' .

    $default  reduce using rule 7 (decl)


state 50

   34 code_item: "dispatch" "identifier" . @4 opt_dispatch_args

    $default  reduce using rule 33 (@4)

    @4  go to state 55


state 51

   46 bitfield: "identifier" . opt_size

    '('  shift, and go to state 56

    '('       [reduce using rule 43 (opt_size)]
    $default  reduce using rule 43 (opt_size)

    opt_size  go to state 57


state 52

   35 code_item: "extract" bitfields .
   44 bitfields: bitfields . ',' bitfield

    ','  shift, and go to state 58

    ','       [reduce using rule 35 (code_item)]
    $default  reduce using rule 35 (code_item)


state 53

   45 bitfields: bitfield .

    $default  reduce using rule 45 (bitfields)


state 54

   18 c_code_expr_item: '(' @2 c_code_body . ')'
   22 c_code_body: c_code_body . c_code_item

    "number"      shift, and go to state 32
    "identifier"  shift, and go to state 33
    "expression"  shift, and go to state 34
    '('           shift, and go to state 35
    ')'           shift, and go to state 59
    ','           shift, and go to state 36
    '='           shift, and go to state 37

    c_code_expr_item  go to state 38
    c_code_item       go to state 39


state 55

   34 code_item: "dispatch" "identifier" @4 . opt_dispatch_args

    '('  shift, and go to state 60

    '('       [reduce using rule 37 (opt_dispatch_args)]
    $default  reduce using rule 37 (opt_dispatch_args)

    opt_dispatch_args  go to state 61


state 56

   42 opt_size: '(' . "number" ')'

    "number"  shift, and go to state 62


state 57

   46 bitfield: "identifier" opt_size .

    $default  reduce using rule 46 (bitfield)


state 58

   44 bitfields: bitfields ',' . bitfield

    "identifier"  shift, and go to state 51

    bitfield  go to state 63


state 59

   18 c_code_expr_item: '(' @2 c_code_body ')' .

    $default  reduce using rule 18 (c_code_expr_item)


state 60

   36 opt_dispatch_args: '(' . dispatch_args ')'

    $default  reduce using rule 40 (@5)

    dispatch_args  go to state 64
    dispatch_arg   go to state 65
    @5             go to state 66


state 61

   34 code_item: "dispatch" "identifier" @4 opt_dispatch_args .

    $default  reduce using rule 34 (code_item)


state 62

   42 opt_size: '(' "number" . ')'

    ')'  shift, and go to state 67


state 63

   44 bitfields: bitfields ',' bitfield .

    $default  reduce using rule 44 (bitfields)


state 64

   36 opt_dispatch_args: '(' dispatch_args . ')'
   38 dispatch_args: dispatch_args . ',' dispatch_arg

    ')'  shift, and go to state 68
    ','  shift, and go to state 69


state 65

   39 dispatch_args: dispatch_arg .

    $default  reduce using rule 39 (dispatch_args)


state 66

   41 dispatch_arg: @5 . c_code_expr_body

    $default  reduce using rule 15 (c_code_expr_body)

    c_code_expr_body  go to state 70


state 67

   42 opt_size: '(' "number" ')' .

    $default  reduce using rule 42 (opt_size)


state 68

   36 opt_dispatch_args: '(' dispatch_args ')' .

    $default  reduce using rule 36 (opt_dispatch_args)


state 69

   38 dispatch_args: dispatch_args ',' . dispatch_arg

    $default  reduce using rule 40 (@5)

    dispatch_arg  go to state 71
    @5            go to state 66


state 70

   14 c_code_expr_body: c_code_expr_body . c_code_expr_item
   41 dispatch_arg: @5 c_code_expr_body .

    "number"      shift, and go to state 32
    "identifier"  shift, and go to state 33
    "expression"  shift, and go to state 34
    '('           shift, and go to state 35
    '='           shift, and go to state 37

    $default  reduce using rule 41 (dispatch_arg)

    c_code_expr_item  go to state 72


state 71

   38 dispatch_args: dispatch_args ',' dispatch_arg .

    $default  reduce using rule 38 (dispatch_args)


state 72

   14 c_code_expr_body: c_code_expr_body c_code_expr_item .

    $default  reduce using rule 14 (c_code_expr_body)
