/Library/Developer/CommandLineTools/usr/bin/ranlib: file: build/src/libaux/libaux.a(socketx.o) has no symbols
/Library/Developer/CommandLineTools/usr/bin/ranlib: file: build/src/libaux/libaux.a(socketx.o) has no symbols
In file included from build/src/libgst/gstpub.c:57:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/gstpub.c:57:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/gstpub.c:57:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
3 warnings generated.
In file included from build/src/libgst/files.c:56:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/files.c:56:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/files.c:56:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
3 warnings generated.
In file included from build/src/libgst/gst-parse.c:53:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/gst-parse.c:53:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/gst-parse.c:53:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/gst-parse.c:763:47: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
            printf ("returned value is %O\n", resultOOP);
                                       ~~     ^~~~~~~~~
build/src/libgst/gst-parse.c:1033:26: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                                   val (p, 0)->sval, classOOP);
                                                     ^~~~~~~~
build/src/libgst/gst-parse.c:1144:6: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                   ((gst_class) OOP_TO_OBJ (class))->name,
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gst-parse.c:1145:6: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                   ((gst_class) OOP_TO_OBJ (classOOP))->name);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gst-parse.c:1189:13: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                           name, OOP_INT_CLASS (currentOOP));
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:460:3: note: expanded from macro 'OOP_INT_CLASS'
  (IS_INT(oop) ? _gst_small_integer_class : OOP_CLASS(oop))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gst-parse.c:1199:17: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                               name, OOP_INT_CLASS (currentOOP));
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:460:3: note: expanded from macro 'OOP_INT_CLASS'
  (IS_INT(oop) ? _gst_small_integer_class : OOP_CLASS(oop))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gst-parse.c:1233:25: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                          list->v_list.name, OOP_INT_CLASS (current_namespace));
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:460:3: note: expanded from macro 'OOP_INT_CLASS'
  (IS_INT(oop) ? _gst_small_integer_class : OOP_CLASS(oop))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gst-parse.c:1254:7: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
                    OOP_INT_CLASS (new_namespace));
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:460:3: note: expanded from macro 'OOP_INT_CLASS'
  (IS_INT(oop) ? _gst_small_integer_class : OOP_CLASS(oop))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
11 warnings generated.
In file included from build/src/libgst/lex.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/lex.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/lex.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/lex.c:1323:30: warning: format specifies type 'int' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
      fprintf (file, ": %d", yylval->ival);
                        ~~   ^~~~~~~~~~~~
                        %ld
4 warnings generated.
In file included from build/src/libgst/str.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/str.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/str.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
3 warnings generated.
In file included from build/src/libgst/tree.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/tree.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/tree.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/tree.c:702:30: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  printf ("selector: %#O\n", node->v_expr.selector);
                     ~~~     ^~~~~~~~~~~~~~~~~~~~~
build/src/libgst/tree.c:779:28: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
      printf ("oop: %O\n", node->v_const.val.oopVal);
                    ~~     ^~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/tree.c:831:38: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
      printf ("%c%s: %O", sep, name, arguments->data[i]);
                     ~~              ^~~~~~~~~~~~~~~~~~
6 warnings generated.
In file included from build/src/libgst/byte.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/byte.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/byte.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/byte.c:287:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4:44: note: expanded from macro 'MATCH_BYTECODES'
#define MATCH_BYTECODES(name_, bp_, code_) BEGIN_MACRO { \
                                           ^~~~~~~~~~~
build/src/libgst/gstpriv.h:216:29: note: expanded from macro 'BEGIN_MACRO'
#define BEGIN_MACRO ((void) (
                            ^
build/src/libgst/byte.c:287:3: note: '{' token is here
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4:56: note: expanded from macro 'MATCH_BYTECODES'
#define MATCH_BYTECODES(name_, bp_, code_) BEGIN_MACRO { \
                                                       ^
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4841:19: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
        printf (" = %O", literal_vec[n]); \
                    ~~   ^~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: flag '+' results in undefined behavior with 'O' conversion specifier [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4850:15: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
        printf (" = %+O", literal_vec[n]); \
                    ~^~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4850:20: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
        printf (" = %+O", literal_vec[n]); \
                    ~~~   ^~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: flag '+' results in undefined behavior with 'O' conversion specifier [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4911:15: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
        printf (" = %+O", literal_vec[n]); \
                    ~^~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4911:20: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
        printf (" = %+O", literal_vec[n]); \
                    ~~~   ^~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4920:19: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
        printf (" = %O", literal_vec[n]); \
                    ~~   ^~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4982:8: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
              _gst_builtin_selectors[n].symbol); \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4989:8: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
              _gst_builtin_selectors[n + 16].symbol); \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4818:28: note: expanded from macro 'MATCH_BYTECODES'
  MATCH_BYTECODES_DISPATCH(MATCH_BYTECODES_##name_) \
                           ^~~~~~~~~~~~~~~~~~~~~~~
<scratch space>:80:1: note: expanded from here
MATCH_BYTECODES_PRINT_BYTECODE_NAME
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:5002:8: note: expanded from macro 'MATCH_BYTECODES_PRINT_BYTECODE_NAME'
              _gst_builtin_selectors[n].symbol, \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4822:40: note: expanded from macro 'MATCH_BYTECODES_DISPATCH'
#define MATCH_BYTECODES_DISPATCH(name) name
                                       ^~~~
build/src/libgst/byte.c:287:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4820:4: note: expanded from macro 'MATCH_BYTECODES'
  ;} END_MACRO
   ^
build/src/libgst/byte.c:287:3: note: ')' token is here
  MATCH_BYTECODES (PRINT_BYTECODE_NAME, bp, (
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/match.h:4820:6: note: expanded from macro 'MATCH_BYTECODES'
  ;} END_MACRO
     ^~~~~~~~~
build/src/libgst/gstpriv.h:217:19: note: expanded from macro 'END_MACRO'
#define END_MACRO ))
                  ^
14 warnings generated.
In file included from build/src/libgst/comp.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/comp.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/comp.c:54:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/comp.c:556:49: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
        printf ("Compiling doit code for %O\n", method->v_method.currentClass);
                                         ~~     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/comp.c:668:18: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
        printf ("%O\n", resultOOP);
                 ~~     ^~~~~~~~~
build/src/libgst/comp.c:747:42: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
    printf ("  class %O, selector %O\n", method->v_method.currentClass, selector);
                     ~~                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/comp.c:747:73: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
    printf ("  class %O, selector %O\n", method->v_method.currentClass, selector);
                                  ~~                                    ^~~~~~~~
7 warnings generated.
In file included from build/src/libgst/sym.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/sym.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/sym.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/sym.c:1066:18: warning: format specifies type 'unsigned int' but the argument has type 'OOP' (aka 'struct oop_s *') [-Wformat]
  printf ("%#O", ent->symbol);
           ~~~   ^~~~~~~~~~~
In file included from build/src/libgst/sym.c:1555:
../../libgst/builtins.gperf:217:20: warning: static variable 'lengthtable' is used in an inline function with external linkage [-Wstatic-in-inline]
        if (len == lengthtable[key])
                   ^
../../libgst/builtins.gperf:620:22: note: 'lengthtable' declared here
static unsigned char lengthtable[] =
                     ^
../../libgst/builtins.gperf:219:38: warning: static variable '_gst_builtin_selectors_hash' is used in an inline function with external linkage [-Wstatic-in-inline]
            register const char *s = _gst_builtin_selectors_hash[key].offset + _gst_builtin_selectors_names;
                                     ^
../../libgst/builtins.gperf:694:32: note: '_gst_builtin_selectors_hash' declared here
static struct builtin_selector _gst_builtin_selectors_hash[] =
                               ^
../../libgst/builtins.gperf:219:80: warning: static variable '_gst_builtin_selectors_names_contents' is used in an inline function with external linkage [-Wstatic-in-inline]
            register const char *s = _gst_builtin_selectors_hash[key].offset + _gst_builtin_selectors_names;
                                                                               ^
../../libgst/builtins.gperf:618:55: note: expanded from macro '_gst_builtin_selectors_names'
#define _gst_builtin_selectors_names ((const char *) &_gst_builtin_selectors_names_contents)
                                                      ^
../../libgst/builtins.gperf:364:46: note: '_gst_builtin_selectors_names_contents' declared here
static struct _gst_builtin_selectors_names_t _gst_builtin_selectors_names_contents =
                                             ^
../../libgst/builtins.gperf:222:23: warning: static variable '_gst_builtin_selectors_hash' is used in an inline function with external linkage [-Wstatic-in-inline]
              return &_gst_builtin_selectors_hash[key];
                      ^
../../libgst/builtins.gperf:694:32: note: '_gst_builtin_selectors_hash' declared here
static struct builtin_selector _gst_builtin_selectors_hash[] =
                               ^
8 warnings generated.
In file included from build/src/libgst/dict.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:35: warning: result of comparison of constant 4611686018427387903 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/dict.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1360:16: warning: result of comparison of constant -4611686018427387904 with expression of type 'int32_t' (aka 'int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (i >= MIN_ST_INT && i <= MAX_ST_INT)
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
In file included from build/src/libgst/dict.c:55:
In file included from build/src/libgst/gstpriv.h:607:
build/src/libgst/dict.inl:1383:17: warning: result of comparison of constant 4611686018427387903 with expression of type 'uint32_t' (aka 'unsigned int') is always true [-Wtautological-constant-out-of-range-compare]
  if COMMON (ui <= MAX_ST_INT)
     ~~~~~~~~~~~^~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:149:41: note: expanded from macro 'COMMON'
#define COMMON(x)   (__builtin_expect ((x) != 0, 1))
                                        ^
build/src/libgst/dict.c:1093:51: error: use of undeclared identifier 'MODULE_PATH'
  add_smalltalk ("ModulePath", relocate_path_oop (MODULE_PATH));
                                                  ^
build/src/libgst/dict.c:1094:52: error: use of undeclared identifier 'LIBEXEC_PATH'
  add_smalltalk ("LibexecPath", relocate_path_oop (LIBEXEC_PATH));
                                                   ^
build/src/libgst/dict.c:1095:47: error: use of undeclared identifier 'PREFIX'
  add_smalltalk ("Prefix", relocate_path_oop (PREFIX));
                                              ^
build/src/libgst/dict.c:1096:51: error: use of undeclared identifier 'EXEC_PREFIX'
  add_smalltalk ("ExecPrefix", relocate_path_oop (EXEC_PREFIX));
                                                  ^
build/src/libgst/dict.c:1174:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    FROM_INT (DBL_MIN_EXP));
                    ^~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:500:25: note: expanded from macro 'FROM_INT'
  (OOP)( ((intptr_t)(i) << 1) + 1)
                        ^
build/src/libgst/dict.inl:390:34: note: expanded from macro 'NAMESPACE_AT_PUT'
        variable_binding_new((keyOOP), (valueOOP), (dictionaryOOP))))
                                        ^~~~~~~~
build/src/libgst/dict.c:1197:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    FROM_INT (FLT_MIN_EXP));
                    ^~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:500:25: note: expanded from macro 'FROM_INT'
  (OOP)( ((intptr_t)(i) << 1) + 1)
                        ^
build/src/libgst/dict.inl:390:34: note: expanded from macro 'NAMESPACE_AT_PUT'
        variable_binding_new((keyOOP), (valueOOP), (dictionaryOOP))))
                                        ^~~~~~~~
build/src/libgst/dict.c:1218:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    FROM_INT (LDBL_MIN_EXP));
                    ^~~~~~~~~~~~~~~~~~~~~~~~
build/src/libgst/gstpriv.h:500:25: note: expanded from macro 'FROM_INT'
  (OOP)( ((intptr_t)(i) << 1) + 1)
                        ^
build/src/libgst/dict.inl:390:34: note: expanded from macro 'NAMESPACE_AT_PUT'
        variable_binding_new((keyOOP), (valueOOP), (dictionaryOOP))))
                                        ^~~~~~~~
6 warnings and 4 errors generated.
scons: *** [build/src/libgst/dict.o] Error 1
